{"ast":null,"code":"var _jsxFileName = \"/Users/lucasoliveira/Documents/PROJETOS/MY/Agile/cast-js/src/components/elenco.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Elenco = ({\n  cast\n}) => {\n  // *NOTA PARA O REVISADOR: no teste tecnico o layout do front aparece 6 cards, já que na requisição só vem 3.. por esse motivo coloque +3 de acordo com o front para ser fiel ao layout me enviado ;)\n  // Notei que não vem no JSON o personagem, mas somente o ator/atriz, por isso coloquei manuakmente...\n  const myCasts = [{\n    id: 0,\n    actor: 'Matt Demon',\n    persona: 'Mark Watney'\n  }, {\n    id: 1,\n    actor: 'Jessica Chastain',\n    persona: 'Melissa Lewis'\n  }, {\n    id: 2,\n    actor: 'Chiwetel Ejiofor',\n    persona: 'Venkat Kapoor'\n  }];\n  console.log(cast.Cast);\n\n  if (cast.Cast != null) {\n    var getCast = cast.Cast; // *NOTA PARA O REVISADOR: no teste tecnico o layout do front aparece 6 cards, já que na requisição só vem 3.. por esse motivo coloque +3 para ser fiel ao layout me enviado ;)\n    // Notei que não vem no JSON o personagem, mas somente o ator/atriz, por isso coloquei manuakmente para ser fiel ao FRONT\n\n    var getCatElenco = getCast.length + 3;\n\n    for (var i = 0; i < getCatElenco; i++) {\n      // NOTA QUE NO JSON (Api request) não vem o PERSONAGEM....\n      if (getCast[i] != null) {\n        myCasts.push({\n          id: myCasts.length,\n          actor: getCast[i].Name,\n          persona: 'Personagem'\n        });\n      }\n    }\n  }\n\n  const listItems = myCasts.map(ref => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"titleElenco\",\n        children: ref.persona\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"subElenco\",\n        children: ref.actor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)\n  }, ref.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-container\",\n    id: \"image-container\",\n    children: listItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 8\n  }, this);\n};\n_c = Elenco;\n\nvar _c;\n\n$RefreshReg$(_c, \"Elenco\");","map":{"version":3,"sources":["/Users/lucasoliveira/Documents/PROJETOS/MY/Agile/cast-js/src/components/elenco.js"],"names":["React","Elenco","cast","myCasts","id","actor","persona","console","log","Cast","getCast","getCatElenco","length","i","push","Name","listItems","map","ref"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,MAAM,GAAE,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAU;AAE1B;AACF;AACC,QAAMC,OAAO,GAAG,CACZ;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC,YAAZ;AAAyBC,IAAAA,OAAO,EAAC;AAAjC,GADY,EAEZ;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC,kBAAZ;AAA+BC,IAAAA,OAAO,EAAC;AAAvC,GAFY,EAGZ;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,KAAK,EAAC,kBAAZ;AAA+BC,IAAAA,OAAO,EAAC;AAAvC,GAHY,CAAhB;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,IAAjB;;AAEA,MAAGP,IAAI,CAACO,IAAL,IAAa,IAAhB,EAAqB;AAEnB,QAAIC,OAAO,GAAGR,IAAI,CAACO,IAAnB,CAFmB,CAIrB;AACD;;AACC,QAAIE,YAAY,GAAGD,OAAO,CAACE,MAAR,GAAe,CAAlC;;AAGE,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACF,YAAd,EAA2BE,CAAC,EAA5B,EAA+B;AAE7B;AACI,UAAGH,OAAO,CAACG,CAAD,CAAP,IAAY,IAAf,EAAoB;AAChBV,QAAAA,OAAO,CAACW,IAAR,CAAa;AACTV,UAAAA,EAAE,EAACD,OAAO,CAACS,MADF;AAETP,UAAAA,KAAK,EAACK,OAAO,CAACG,CAAD,CAAP,CAAWE,IAFR;AAGTT,UAAAA,OAAO,EAAC;AAHC,SAAb;AAKH;AACJ;AAEJ;;AAID,QAAMU,SAAS,GAAGb,OAAO,CAACc,GAAR,CAAaC,GAAD,iBAEtB;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAA+BA,GAAG,CAACZ;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,kBAA6BY,GAAG,CAACb;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,KAA4Ba,GAAG,CAACd,EAAhC;AAAA;AAAA;AAAA;AAAA,UAFU,CAAlB;AAWA,sBACG;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,EAAE,EAAC,iBAApC;AAAA,cACEY;AADF;AAAA;AAAA;AAAA;AAAA,UADH;AAQH,CAvDM;KAAMf,M","sourcesContent":["import React from 'react';\n\nexport const Elenco =({cast})=>{\n\n     // *NOTA PARA O REVISADOR: no teste tecnico o layout do front aparece 6 cards, já que na requisição só vem 3.. por esse motivo coloque +3 de acordo com o front para ser fiel ao layout me enviado ;)\n   // Notei que não vem no JSON o personagem, mas somente o ator/atriz, por isso coloquei manuakmente...\n    const myCasts = [\n        {id:0,actor:'Matt Demon',persona:'Mark Watney'},\n        {id:1,actor:'Jessica Chastain',persona:'Melissa Lewis'},\n        {id:2,actor:'Chiwetel Ejiofor',persona:'Venkat Kapoor'},\n    ];\n    console.log(cast.Cast)\n    \n    if(cast.Cast != null){\n\n      var getCast = cast.Cast;\n\n    // *NOTA PARA O REVISADOR: no teste tecnico o layout do front aparece 6 cards, já que na requisição só vem 3.. por esse motivo coloque +3 para ser fiel ao layout me enviado ;)\n   // Notei que não vem no JSON o personagem, mas somente o ator/atriz, por isso coloquei manuakmente para ser fiel ao FRONT\n    var getCatElenco = getCast.length+3;\n     \n\n      for(var i=0;i<getCatElenco;i++){\n\n        // NOTA QUE NO JSON (Api request) não vem o PERSONAGEM....\n            if(getCast[i]!=null){\n                myCasts.push({\n                    id:myCasts.length,\n                    actor:getCast[i].Name,\n                    persona:'Personagem'\n                });\n            }\n        }\n     \n    }\n\n\n \n    const listItems = myCasts.map((ref) =>\n        \n            <div className=\"image\" key={ref.id}>\n                <div className=\"cardContainer\">\n                    <span className='titleElenco'>{ref.persona}</span>\n                    <span className='subElenco'>{ref.actor}</span>\n                </div>\n            </div>\n        \n     );\n\n    return(\n       <div className='image-container' id='image-container'> \n        {listItems}\n       </div>\n    )\n\n     \n        \n}"]},"metadata":{},"sourceType":"module"}