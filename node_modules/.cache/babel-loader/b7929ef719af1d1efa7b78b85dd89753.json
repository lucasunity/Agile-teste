{"ast":null,"code":"var _jsxFileName = \"/Users/lucasoliveira/Documents/PROJETOS/MY/Agile/cast-js/src/assets/components/elenco.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Elenco = ({\n  cast\n}) => {\n  // *NOTA PARA O REVISADOR: no teste tecnico o layout do front aparece 6 cards, já que na requisição só vem 3.. por esse motivo coloque +3 de acordo com o front para ser fiel ao layout me enviado ;)\n  // Notei que não vem no JSON o personagem, mas somente o ator/atriz, por isso coloquei manuakmente...\n  const myCasts = [{\n    id: 0,\n    actor: \"Matt Demon\",\n    persona: \"Mark Watney\"\n  }, {\n    id: 1,\n    actor: \"Jessica Chastain\",\n    persona: \"Melissa Lewis\"\n  }, {\n    id: 2,\n    actor: \"Chiwetel Ejiofor\",\n    persona: \"Venkat Kapoor\"\n  }];\n  console.log(cast.Cast);\n\n  if (cast.Cast != null) {\n    var getCast = cast.Cast; // *NOTA PARA O REVISADOR: no teste tecnico o layout do front aparece 6 cards, já que na requisição só vem 3.. por esse motivo coloque +3 para ser fiel ao layout me enviado ;)\n    // Notei que não vem no JSON o personagem, mas somente o ator/atriz, por isso coloquei manuakmente para ser fiel ao FRONT\n\n    var getCatElenco = getCast.length + 3;\n\n    for (var i = 0; i < getCatElenco; i++) {\n      // NOTA QUE NO JSON (Api request) não vem o PERSONAGEM....\n      if (getCast[i] != null) {\n        myCasts.push({\n          id: myCasts.length,\n          actor: getCast[i].Name,\n          persona: \"Personagem\"\n        });\n      }\n    }\n  }\n\n  const listItems = myCasts.map(ref => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"titleElenco\",\n        children: ref.persona\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"subElenco\",\n        children: ref.actor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, ref.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-container\",\n    id: \"image-container\",\n    children: listItems\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = Elenco;\n\nvar _c;\n\n$RefreshReg$(_c, \"Elenco\");","map":{"version":3,"sources":["/Users/lucasoliveira/Documents/PROJETOS/MY/Agile/cast-js/src/assets/components/elenco.js"],"names":["React","Component","Elenco","cast","myCasts","id","actor","persona","console","log","Cast","getCast","getCatElenco","length","i","push","Name","listItems","map","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAO,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAClC;AACA;AACA,QAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,YAAhB;AAA8BC,IAAAA,OAAO,EAAE;AAAvC,GADc,EAEd;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,kBAAhB;AAAoCC,IAAAA,OAAO,EAAE;AAA7C,GAFc,EAGd;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,KAAK,EAAE,kBAAhB;AAAoCC,IAAAA,OAAO,EAAE;AAA7C,GAHc,CAAhB;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,IAAjB;;AAEA,MAAIP,IAAI,CAACO,IAAL,IAAa,IAAjB,EAAuB;AACrB,QAAIC,OAAO,GAAGR,IAAI,CAACO,IAAnB,CADqB,CAGrB;AACA;;AACA,QAAIE,YAAY,GAAGD,OAAO,CAACE,MAAR,GAAiB,CAApC;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAApB,EAAkCE,CAAC,EAAnC,EAAuC;AACrC;AACA,UAAIH,OAAO,CAACG,CAAD,CAAP,IAAc,IAAlB,EAAwB;AACtBV,QAAAA,OAAO,CAACW,IAAR,CAAa;AACXV,UAAAA,EAAE,EAAED,OAAO,CAACS,MADD;AAEXP,UAAAA,KAAK,EAAEK,OAAO,CAACG,CAAD,CAAP,CAAWE,IAFP;AAGXT,UAAAA,OAAO,EAAE;AAHE,SAAb;AAKD;AACF;AACF;;AAED,QAAMU,SAAS,GAAGb,OAAO,CAACc,GAAR,CAAaC,GAAD,iBAC5B;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA,kBAA+BA,GAAG,CAACZ;AAAnC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA,kBAA6BY,GAAG,CAACb;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,KAA4Ba,GAAG,CAACd,EAAhC;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,EAAE,EAAC,iBAApC;AAAA,cACGY;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3CM;KAAMf,M","sourcesContent":["import React, { Component } from \"react\";\n\nexport const Elenco = ({ cast }) => {\n  // *NOTA PARA O REVISADOR: no teste tecnico o layout do front aparece 6 cards, já que na requisição só vem 3.. por esse motivo coloque +3 de acordo com o front para ser fiel ao layout me enviado ;)\n  // Notei que não vem no JSON o personagem, mas somente o ator/atriz, por isso coloquei manuakmente...\n  const myCasts = [\n    { id: 0, actor: \"Matt Demon\", persona: \"Mark Watney\" },\n    { id: 1, actor: \"Jessica Chastain\", persona: \"Melissa Lewis\" },\n    { id: 2, actor: \"Chiwetel Ejiofor\", persona: \"Venkat Kapoor\" },\n  ];\n  console.log(cast.Cast);\n\n  if (cast.Cast != null) {\n    var getCast = cast.Cast;\n\n    // *NOTA PARA O REVISADOR: no teste tecnico o layout do front aparece 6 cards, já que na requisição só vem 3.. por esse motivo coloque +3 para ser fiel ao layout me enviado ;)\n    // Notei que não vem no JSON o personagem, mas somente o ator/atriz, por isso coloquei manuakmente para ser fiel ao FRONT\n    var getCatElenco = getCast.length + 3;\n\n    for (var i = 0; i < getCatElenco; i++) {\n      // NOTA QUE NO JSON (Api request) não vem o PERSONAGEM....\n      if (getCast[i] != null) {\n        myCasts.push({\n          id: myCasts.length,\n          actor: getCast[i].Name,\n          persona: \"Personagem\",\n        });\n      }\n    }\n  }\n\n  const listItems = myCasts.map((ref) => (\n    <div className=\"image\" key={ref.id}>\n      <div className=\"cardContainer\">\n        <span className=\"titleElenco\">{ref.persona}</span>\n        <span className=\"subElenco\">{ref.actor}</span>\n      </div>\n    </div>\n  ));\n\n  return (\n    <div className=\"image-container\" id=\"image-container\">\n      {listItems}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}